// Code generated by ./cmd/generate/main.go; DO NOT EDIT.
package language

import (
	"strings"

	"github.com/wakatime/wakatime-cli/pkg/heartbeat"
)

// Parse parses the language from a plugin specific string.
func Parse(language, plugin string) (heartbeat.Language, bool) {
	switch strings.ToLower(plugin) {
	case "vim":
		return parseVim(language)
	default:
		return parseDefault(language)
	}
}

func parseDefault(language string) (heartbeat.Language, bool) {
	switch strings.ToLower(language) {
	case strings.ToLower("actionscript"):
		return heartbeat.ParseLanguage("actionscript")
	case strings.ToLower("ada"):
		return heartbeat.ParseLanguage("ada")
	case strings.ToLower("agda"):
		return heartbeat.ParseLanguage("agda")
	case strings.ToLower("ansible"):
		return heartbeat.ParseLanguage("ansible")
	case strings.ToLower("apacheconf"):
		return heartbeat.ParseLanguage("apacheconf")
	case strings.ToLower("applescript"):
		return heartbeat.ParseLanguage("applescript")
	case strings.ToLower("asp"):
		return heartbeat.ParseLanguage("asp")
	case strings.ToLower("assembly"):
		return heartbeat.ParseLanguage("assembly")
	case strings.ToLower("autoconf"):
		return heartbeat.ParseLanguage("autoconf")
	case strings.ToLower("awk"):
		return heartbeat.ParseLanguage("awk")
	case strings.ToLower("bash"):
		return heartbeat.ParseLanguage("bash")
	case strings.ToLower("basic"):
		return heartbeat.ParseLanguage("basic")
	case strings.ToLower("bat"):
		return heartbeat.ParseLanguage("batchscript")
	case strings.ToLower("bibtex"):
		return heartbeat.ParseLanguage("bibtex")
	case strings.ToLower("brightscript"):
		return heartbeat.ParseLanguage("brightscript")
	case strings.ToLower("c"):
		return heartbeat.ParseLanguage("c")
	case strings.ToLower("c#"):
		return heartbeat.ParseLanguage("csharp")
	case strings.ToLower("c++"):
		return heartbeat.ParseLanguage("cpp")
	case strings.ToLower("clojure"):
		return heartbeat.ParseLanguage("clojure")
	case strings.ToLower("cocoa"):
		return heartbeat.ParseLanguage("cocoa")
	case strings.ToLower("coffeescript"):
		return heartbeat.ParseLanguage("coffeescript")
	case strings.ToLower("coldfusion"):
		return heartbeat.ParseLanguage("coldfusion")
	case strings.ToLower("coldfusion html"):
		return heartbeat.ParseLanguage("coldfusion")
	case strings.ToLower("common lisp"):
		return heartbeat.ParseLanguage("commonlisp")
	case strings.ToLower("coq"):
		return heartbeat.ParseLanguage("coq")
	case strings.ToLower("cperl"):
		return heartbeat.ParseLanguage("cperl")
	case strings.ToLower("cshtml"):
		return heartbeat.ParseLanguage("cshtml")
	case strings.ToLower("css"):
		return heartbeat.ParseLanguage("css")
	case strings.ToLower("cvs"):
		return heartbeat.ParseLanguage("cvs")
	case strings.ToLower("dart"):
		return heartbeat.ParseLanguage("dart")
	case strings.ToLower("dcl"):
		return heartbeat.ParseLanguage("dcl")
	case strings.ToLower("delphi"):
		return heartbeat.ParseLanguage("delphi")
	case strings.ToLower("dhall"):
		return heartbeat.ParseLanguage("dhall")
	case strings.ToLower("diff"):
		return heartbeat.ParseLanguage("diff")
	case strings.ToLower("doctex"):
		return heartbeat.ParseLanguage("doctex")
	case strings.ToLower("elixir"):
		return heartbeat.ParseLanguage("elixir")
	case strings.ToLower("elm"):
		return heartbeat.ParseLanguage("elm")
	case strings.ToLower("emacs lisp"):
		return heartbeat.ParseLanguage("emacslisp")
	case strings.ToLower("erlang"):
		return heartbeat.ParseLanguage("erlang")
	case strings.ToLower("eshell"):
		return heartbeat.ParseLanguage("eshell")
	case strings.ToLower("f#"):
		return heartbeat.ParseLanguage("fsharp")
	case strings.ToLower("fish"):
		return heartbeat.ParseLanguage("fish")
	case strings.ToLower("fortran"):
		return heartbeat.ParseLanguage("fortran")
	case strings.ToLower("gas"):
		return heartbeat.ParseLanguage("assembly")
	case strings.ToLower("go"):
		return heartbeat.ParseLanguage("go")
	case strings.ToLower("gosu"):
		return heartbeat.ParseLanguage("gosu")
	case strings.ToLower("groovy"):
		return heartbeat.ParseLanguage("groovy")
	case strings.ToLower("haml"):
		return heartbeat.ParseLanguage("haml")
	case strings.ToLower("haskell"):
		return heartbeat.ParseLanguage("haskell")
	case strings.ToLower("haxe"):
		return heartbeat.ParseLanguage("haxe")
	case strings.ToLower("hcl"):
		return heartbeat.ParseLanguage("hcl")
	case strings.ToLower("html"):
		return heartbeat.ParseLanguage("html")
	case strings.ToLower("ini"):
		return heartbeat.ParseLanguage("ini")
	case strings.ToLower("jade"):
		return heartbeat.ParseLanguage("jade")
	case strings.ToLower("java"):
		return heartbeat.ParseLanguage("java")
	case strings.ToLower("javascript"):
		return heartbeat.ParseLanguage("javascript")
	case strings.ToLower("json"):
		return heartbeat.ParseLanguage("json")
	case strings.ToLower("jsx"):
		return heartbeat.ParseLanguage("jsx")
	case strings.ToLower("kotlin"):
		return heartbeat.ParseLanguage("kotlin")
	case strings.ToLower("latex"):
		return heartbeat.ParseLanguage("latex")
	case strings.ToLower("ld-script"):
		return heartbeat.ParseLanguage("linkerscript")
	case strings.ToLower("less"):
		return heartbeat.ParseLanguage("less")
	case strings.ToLower("lua"):
		return heartbeat.ParseLanguage("lua")
	case strings.ToLower("makefile"):
		return heartbeat.ParseLanguage("makefile")
	case strings.ToLower("man"):
		return heartbeat.ParseLanguage("man")
	case strings.ToLower("markdown"):
		return heartbeat.ParseLanguage("markdown")
	case strings.ToLower("matlab"):
		return heartbeat.ParseLanguage("matlab")
	case strings.ToLower("metafont"):
		return heartbeat.ParseLanguage("metafont")
	case strings.ToLower("metapost"):
		return heartbeat.ParseLanguage("metapost")
	case strings.ToLower("mustache"):
		return heartbeat.ParseLanguage("mustache")
	case strings.ToLower("nix"):
		return heartbeat.ParseLanguage("nix")
	case strings.ToLower("objective-c"):
		return heartbeat.ParseLanguage("objective-c")
	case strings.ToLower("objective-c++"):
		return heartbeat.ParseLanguage("objective-cpp")
	case strings.ToLower("objective-j"):
		return heartbeat.ParseLanguage("objective-j")
	case strings.ToLower("ocaml"):
		return heartbeat.ParseLanguage("ocaml")
	case strings.ToLower("org"):
		return heartbeat.ParseLanguage("org")
	case strings.ToLower("pascal"):
		return heartbeat.ParseLanguage("pascal")
	case strings.ToLower("perl"):
		return heartbeat.ParseLanguage("perl")
	case strings.ToLower("php"):
		return heartbeat.ParseLanguage("php")
	case strings.ToLower("powershell"):
		return heartbeat.ParseLanguage("powershell")
	case strings.ToLower("prolog"):
		return heartbeat.ParseLanguage("prolog")
	case strings.ToLower("puppet"):
		return heartbeat.ParseLanguage("puppet")
	case strings.ToLower("purescript"):
		return heartbeat.ParseLanguage("purescript")
	case strings.ToLower("python"):
		return heartbeat.ParseLanguage("python")
	case strings.ToLower("r"):
		return heartbeat.ParseLanguage("r")
	case strings.ToLower("restructuredtext"):
		return heartbeat.ParseLanguage("restructuredtext")
	case strings.ToLower("ruby"):
		return heartbeat.ParseLanguage("ruby")
	case strings.ToLower("rust"):
		return heartbeat.ParseLanguage("rust")
	case strings.ToLower("salt"):
		return heartbeat.ParseLanguage("salt")
	case strings.ToLower("sass"):
		return heartbeat.ParseLanguage("sass")
	case strings.ToLower("scala"):
		return heartbeat.ParseLanguage("scala")
	case strings.ToLower("scheme"):
		return heartbeat.ParseLanguage("scheme")
	case strings.ToLower("scribe"):
		return heartbeat.ParseLanguage("scribe")
	case strings.ToLower("scss"):
		return heartbeat.ParseLanguage("scss")
	case strings.ToLower("sgml"):
		return heartbeat.ParseLanguage("sgml")
	case strings.ToLower("shell"):
		return heartbeat.ParseLanguage("shell")
	case strings.ToLower("simula"):
		return heartbeat.ParseLanguage("simula")
	case strings.ToLower("slim"):
		return heartbeat.ParseLanguage("slim")
	case strings.ToLower("smalltalk"):
		return heartbeat.ParseLanguage("smalltalk")
	case strings.ToLower("smime"):
		return heartbeat.ParseLanguage("smime")
	case strings.ToLower("sql"):
		return heartbeat.ParseLanguage("sql")
	case strings.ToLower("swift"):
		return heartbeat.ParseLanguage("swift")
	case strings.ToLower("tex"):
		return heartbeat.ParseLanguage("tex")
	case strings.ToLower("text"):
		return heartbeat.ParseLanguage("text")
	case strings.ToLower("turing"):
		return heartbeat.ParseLanguage("turing")
	case strings.ToLower("twig"):
		return heartbeat.ParseLanguage("twig")
	case strings.ToLower("typescript"):
		return heartbeat.ParseLanguage("typescript")
	case strings.ToLower("typoscript"):
		return heartbeat.ParseLanguage("typoscript")
	case strings.ToLower("vb.net"):
		return heartbeat.ParseLanguage("vb.net")
	case strings.ToLower("verilog"):
		return heartbeat.ParseLanguage("verilog")
	case strings.ToLower("vhdl"):
		return heartbeat.ParseLanguage("vhdl")
	case strings.ToLower("viml"):
		return heartbeat.ParseLanguage("viml")
	case strings.ToLower("xaml"):
		return heartbeat.ParseLanguage("xaml")
	case strings.ToLower("xml"):
		return heartbeat.ParseLanguage("xml")
	case strings.ToLower("yaml"):
		return heartbeat.ParseLanguage("yaml")
	default:
		return heartbeat.LanguageUnknown, false
	}
}

func parseVim(language string) (heartbeat.Language, bool) {
	switch strings.ToLower(language) {
	case strings.ToLower("a65"):
		return heartbeat.ParseLanguage("assembly")
	case strings.ToLower("asm"):
		return heartbeat.ParseLanguage("assembly")
	case strings.ToLower("asm68k"):
		return heartbeat.ParseLanguage("assembly")
	case strings.ToLower("asmh8300"):
		return heartbeat.ParseLanguage("assembly")
	case strings.ToLower("basic"):
		return heartbeat.ParseLanguage("basic")
	case strings.ToLower("c"):
		return heartbeat.ParseLanguage("c")
	case strings.ToLower("cpp"):
		return heartbeat.ParseLanguage("cpp")
	case strings.ToLower("crontab"):
		return heartbeat.ParseLanguage("crontab")
	case strings.ToLower("cs"):
		return heartbeat.ParseLanguage("csharp")
	case strings.ToLower("haml"):
		return heartbeat.ParseLanguage("haml")
	case strings.ToLower("haskell"):
		return heartbeat.ParseLanguage("haskell")
	case strings.ToLower("html"):
		return heartbeat.ParseLanguage("html")
	case strings.ToLower("htmlcheetah"):
		return heartbeat.ParseLanguage("html")
	case strings.ToLower("htmldjango"):
		return heartbeat.ParseLanguage("html")
	case strings.ToLower("htmlm4"):
		return heartbeat.ParseLanguage("html")
	case strings.ToLower("java"):
		return heartbeat.ParseLanguage("java")
	case strings.ToLower("javascript"):
		return heartbeat.ParseLanguage("javascript")
	case strings.ToLower("lhaskell"):
		return heartbeat.ParseLanguage("haskell")
	case strings.ToLower("markdown"):
		return heartbeat.ParseLanguage("markdown")
	case strings.ToLower("objc"):
		return heartbeat.ParseLanguage("objectivec")
	case strings.ToLower("objcpp"):
		return heartbeat.ParseLanguage("objectivecpp")
	case strings.ToLower("ocaml"):
		return heartbeat.ParseLanguage("ocaml")
	case strings.ToLower("perl"):
		return heartbeat.ParseLanguage("perl")
	case strings.ToLower("perl6"):
		return heartbeat.ParseLanguage("perl")
	case strings.ToLower("php"):
		return heartbeat.ParseLanguage("php")
	case strings.ToLower("phtml"):
		return heartbeat.ParseLanguage("php")
	case strings.ToLower("prolog"):
		return heartbeat.ParseLanguage("prolog")
	case strings.ToLower("python"):
		return heartbeat.ParseLanguage("python")
	case strings.ToLower("r"):
		return heartbeat.ParseLanguage("r")
	case strings.ToLower("ruby"):
		return heartbeat.ParseLanguage("ruby")
	case strings.ToLower("sass"):
		return heartbeat.ParseLanguage("sass")
	case strings.ToLower("scheme"):
		return heartbeat.ParseLanguage("scheme")
	case strings.ToLower("scss"):
		return heartbeat.ParseLanguage("scss")
	case strings.ToLower("skill"):
		return heartbeat.ParseLanguage("skill")
	case strings.ToLower("vb"):
		return heartbeat.ParseLanguage("vbnet")
	case strings.ToLower("vim"):
		return heartbeat.ParseLanguage("viml")
	case strings.ToLower("xhtml"):
		return heartbeat.ParseLanguage("html")
	case strings.ToLower("xml"):
		return heartbeat.ParseLanguage("xml")
	case strings.ToLower("yaml"):
		return heartbeat.ParseLanguage("yaml")
	default:
		return heartbeat.LanguageUnknown, false
	}
}
