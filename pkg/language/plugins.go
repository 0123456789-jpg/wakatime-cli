// Code generated by ./cmd/generate/main.go; DO NOT EDIT.
package language

import "github.com/wakatime/wakatime-cli/pkg/heartbeat"

func Parse(language, plugin string) (heartbeat.Language, bool) {
	switch plugin {
	case "vim":
		return parseVim(language)
	default:
		return parseDefault(language)
	}
}

func parseDefault(language string) (heartbeat.Language, bool) {
	switch language {
 	case "actionscript":
 		return heartbeat.LanguageActionScript, true
 	case "ada":
 		return heartbeat.LanguageAda, true
 	case "agda":
 		return heartbeat.LanguageAgda, true
 	case "ansible":
 		return heartbeat.LanguageAnsible, true
 	case "apacheconf":
 		return heartbeat.LanguageApacheConf, true
 	case "applescript":
 		return heartbeat.LanguageAppleScript, true
 	case "asp":
 		return heartbeat.LanguageASP, true
 	case "assembly":
 		return heartbeat.LanguageAssembly, true
 	case "autoconf":
 		return heartbeat.LanguageAutoconf, true
 	case "awk":
 		return heartbeat.LanguageAWK, true
 	case "bash":
 		return heartbeat.LanguageBash, true
 	case "basic":
 		return heartbeat.LanguageBasic, true
 	case "bat":
 		return heartbeat.LanguageBatchScript, true
 	case "bibtex":
 		return heartbeat.LanguageBibTeX, true
 	case "brightscript":
 		return heartbeat.LanguageBrightScript, true
 	case "c":
 		return heartbeat.LanguageC, true
 	case "c#":
 		return heartbeat.LanguageCSharp, true
 	case "c++":
 		return heartbeat.LanguageCPP, true
 	case "clojure":
 		return heartbeat.LanguageClojure, true
 	case "cocoa":
 		return heartbeat.LanguageCocoa, true
 	case "coffeescript":
 		return heartbeat.LanguageCoffeeScript, true
 	case "coldfusion":
 		return heartbeat.LanguageColdFusion, true
 	case "coldfusion html":
 		return heartbeat.LanguageColdFusion, true
 	case "common lisp":
 		return heartbeat.LanguageCommonLisp, true
 	case "coq":
 		return heartbeat.LanguageCoq, true
 	case "cperl":
 		return heartbeat.Languagecperl, true
 	case "cshtml":
 		return heartbeat.LanguageCSHTML, true
 	case "css":
 		return heartbeat.LanguageCSS, true
 	case "cvs":
 		return heartbeat.LanguageCVS, true
 	case "dart":
 		return heartbeat.LanguageDart, true
 	case "dcl":
 		return heartbeat.LanguageDCL, true
 	case "delphi":
 		return heartbeat.LanguageDelphi, true
 	case "dhall":
 		return heartbeat.LanguageDhall, true
 	case "diff":
 		return heartbeat.LanguageDiff, true
 	case "doctex":
 		return heartbeat.LanguageDocTeX, true
 	case "elixir":
 		return heartbeat.LanguageElixir, true
 	case "elm":
 		return heartbeat.LanguageElm, true
 	case "emacs lisp":
 		return heartbeat.LanguageEmacsLisp, true
 	case "erlang":
 		return heartbeat.LanguageErlang, true
 	case "eshell":
 		return heartbeat.LanguageEshell, true
 	case "f#":
 		return heartbeat.LanguageFSharp, true
 	case "fish":
 		return heartbeat.LanguageFish, true
 	case "fortran":
 		return heartbeat.LanguageFortran, true
 	case "gas":
 		return heartbeat.LanguageAssembly, true
 	case "go":
 		return heartbeat.LanguageGo, true
 	case "gosu":
 		return heartbeat.LanguageGosu, true
 	case "groovy":
 		return heartbeat.LanguageGroovy, true
 	case "haml":
 		return heartbeat.LanguageHaml, true
 	case "haskell":
 		return heartbeat.LanguageHaskell, true
 	case "haxe":
 		return heartbeat.LanguageHaxe, true
 	case "hcl":
 		return heartbeat.LanguageHCL, true
 	case "html":
 		return heartbeat.LanguageHTML, true
 	case "ini":
 		return heartbeat.LanguageINI, true
 	case "jade":
 		return heartbeat.LanguageJade, true
 	case "java":
 		return heartbeat.LanguageJava, true
 	case "javascript":
 		return heartbeat.LanguageJavaScript, true
 	case "json":
 		return heartbeat.LanguageJSON, true
 	case "jsx":
 		return heartbeat.LanguageJSX, true
 	case "kotlin":
 		return heartbeat.LanguageKotlin, true
 	case "latex":
 		return heartbeat.LanguageLaTeX, true
 	case "ld-script":
 		return heartbeat.LanguageLinkerScript, true
 	case "less":
 		return heartbeat.LanguageLESS, true
 	case "lua":
 		return heartbeat.LanguageLua, true
 	case "makefile":
 		return heartbeat.LanguageMakefile, true
 	case "man":
 		return heartbeat.LanguageMan, true
 	case "markdown":
 		return heartbeat.LanguageMarkdown, true
 	case "matlab":
 		return heartbeat.LanguageMatlab, true
 	case "metafont":
 		return heartbeat.LanguageMetafont, true
 	case "metapost":
 		return heartbeat.LanguageMetapost, true
 	case "mustache":
 		return heartbeat.LanguageMustache, true
 	case "nix":
 		return heartbeat.LanguageNix, true
 	case "objective-c":
 		return heartbeat.LanguageObjective-C, true
 	case "objective-c++":
 		return heartbeat.LanguageObjective-CPP, true
 	case "objective-j":
 		return heartbeat.LanguageObjective-J, true
 	case "ocaml":
 		return heartbeat.LanguageOCaml, true
 	case "org":
 		return heartbeat.LanguageOrg, true
 	case "pascal":
 		return heartbeat.LanguagePascal, true
 	case "perl":
 		return heartbeat.LanguagePerl, true
 	case "php":
 		return heartbeat.LanguagePHP, true
 	case "powershell":
 		return heartbeat.LanguagePowerShell, true
 	case "prolog":
 		return heartbeat.LanguageProlog, true
 	case "puppet":
 		return heartbeat.LanguagePuppet, true
 	case "purescript":
 		return heartbeat.LanguagePureScript, true
 	case "python":
 		return heartbeat.LanguagePython, true
 	case "r":
 		return heartbeat.LanguageR, true
 	case "restructuredtext":
 		return heartbeat.LanguagereStructuredText, true
 	case "ruby":
 		return heartbeat.LanguageRuby, true
 	case "rust":
 		return heartbeat.LanguageRust, true
 	case "salt":
 		return heartbeat.LanguageSalt, true
 	case "sass":
 		return heartbeat.LanguageSass, true
 	case "scala":
 		return heartbeat.LanguageScala, true
 	case "scheme":
 		return heartbeat.LanguageScheme, true
 	case "scribe":
 		return heartbeat.LanguageScribe, true
 	case "scss":
 		return heartbeat.LanguageSCSS, true
 	case "sgml":
 		return heartbeat.LanguageSGML, true
 	case "shell":
 		return heartbeat.LanguageShell, true
 	case "simula":
 		return heartbeat.LanguageSimula, true
 	case "slim":
 		return heartbeat.LanguageSlim, true
 	case "smalltalk":
 		return heartbeat.LanguageSmalltalk, true
 	case "smime":
 		return heartbeat.LanguageSMIME, true
 	case "sql":
 		return heartbeat.LanguageSQL, true
 	case "swift":
 		return heartbeat.LanguageSwift, true
 	case "tex":
 		return heartbeat.LanguageTeX, true
 	case "text":
 		return heartbeat.LanguageText, true
 	case "turing":
 		return heartbeat.LanguageTuring, true
 	case "twig":
 		return heartbeat.LanguageTwig, true
 	case "typescript":
 		return heartbeat.LanguageTypeScript, true
 	case "typoscript":
 		return heartbeat.LanguageTypoScript, true
 	case "vb.net":
 		return heartbeat.LanguageVB.net, true
 	case "verilog":
 		return heartbeat.LanguageVerilog, true
 	case "vhdl":
 		return heartbeat.LanguageVHDL, true
 	case "viml":
 		return heartbeat.LanguageVimL, true
 	case "xaml":
 		return heartbeat.LanguageXAML, true
 	case "xml":
 		return heartbeat.LanguageXML, true
 	case "yaml":
 		return heartbeat.LanguageYAML, true
 	default:
 		return heartbeat.LanguageUnknown, false
 	}
}

func parseVim(language string) (heartbeat.Language, bool) {
	switch language {
 	case "a65":
 		return heartbeat.LanguageAssembly, true
 	case "asm":
 		return heartbeat.LanguageAssembly, true
 	case "asm68k":
 		return heartbeat.LanguageAssembly, true
 	case "asmh8300":
 		return heartbeat.LanguageAssembly, true
 	case "basic":
 		return heartbeat.LanguageBasic, true
 	case "c":
 		return heartbeat.LanguageC, true
 	case "cpp":
 		return heartbeat.LanguageCPP, true
 	case "crontab":
 		return heartbeat.LanguageCrontab, true
 	case "cs":
 		return heartbeat.LanguageCSharp, true
 	case "haml":
 		return heartbeat.LanguageHAML, true
 	case "haskell":
 		return heartbeat.LanguageHaskell, true
 	case "html":
 		return heartbeat.LanguageHTML, true
 	case "htmlcheetah":
 		return heartbeat.LanguageHTML, true
 	case "htmldjango":
 		return heartbeat.LanguageHTML, true
 	case "htmlm4":
 		return heartbeat.LanguageHTML, true
 	case "java":
 		return heartbeat.LanguageJava, true
 	case "javascript":
 		return heartbeat.LanguageJavaScript, true
 	case "lhaskell":
 		return heartbeat.LanguageHaskell, true
 	case "markdown":
 		return heartbeat.LanguageMarkdown, true
 	case "objc":
 		return heartbeat.LanguageObjectiveC, true
 	case "objcpp":
 		return heartbeat.LanguageObjectiveCPP, true
 	case "ocaml":
 		return heartbeat.LanguageOCaml, true
 	case "perl":
 		return heartbeat.LanguagePerl, true
 	case "perl6":
 		return heartbeat.LanguagePerl, true
 	case "php":
 		return heartbeat.LanguagePHP, true
 	case "phtml":
 		return heartbeat.LanguagePHP, true
 	case "prolog":
 		return heartbeat.LanguageProlog, true
 	case "python":
 		return heartbeat.LanguagePython, true
 	case "r":
 		return heartbeat.LanguageR, true
 	case "ruby":
 		return heartbeat.LanguageRuby, true
 	case "sass":
 		return heartbeat.LanguageSass, true
 	case "scheme":
 		return heartbeat.LanguageScheme, true
 	case "scss":
 		return heartbeat.LanguageSCSS, true
 	case "skill":
 		return heartbeat.LanguageSKILL, true
 	case "vb":
 		return heartbeat.LanguageVBNet, true
 	case "vim":
 		return heartbeat.LanguageVimL, true
 	case "xhtml":
 		return heartbeat.LanguageHTML, true
 	case "xml":
 		return heartbeat.LanguageXML, true
 	case "yaml":
 		return heartbeat.LanguageYAML, true
 	default:
 		return heartbeat.LanguageUnknown, false
 	}
}
